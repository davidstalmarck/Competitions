from collections import defaultdict

_n = int(input())
radius = [int(x) for x in input().split()]

numbRadius = [1, 5, 13, 29, 49, 81, 113, 149, 197, 253, 317, 377, 441, 529, 613, 709, 797, 901, 1009, 1129, 1257, 1373, 1517, 1653, 1793, 1961, 2121, 2289, 2453, 2629, 2821, 3001, 3209, 3409, 3625, 3853, 4053, 4293, 4513, 4777, 5025, 5261, 5525, 5789, 6077, 6361, 6625, 6921, 7213, 7525, 7845, 8173, 8497, 8809, 9145, 9477, 9845, 10189, 10557, 10913, 11289, 11681, 12061, 12453, 12853, 13273, 13673, 14073, 14505, 14949, 15373, 15813, 16241, 16729, 17193, 17665, 18125, 18605, 19109, 19577, 20081, 20593, 21101, 21629, 22133, 22701, 23217, 23769, 24313, 24845, 25445, 25997, 26565, 27145, 27729, 28345, 28917, 29525, 30149, 30757, 31417, 32017, 32681, 33317, 33949, 34621, 35265, 35953, 36625, 37297, 37981, 38669, 39381, 40089, 40793, 41545, 42265, 42981, 43709, 44469, 45225, 45969, 46713, 47485, 48301, 49077, 49861, 50617, 51433, 52257, 53077, 53885, 54693, 55557, 56401, 57209, 58089, 58941, 59805, 60669, 61529, 62433, 63305, 64209, 65101, 66045, 66957, 67857, 68777, 69729, 70681, 71613, 72533, 73517, 74457, 75465, 76425, 77401, 78413, 79381, 80381, 81377, 82433, 83457, 84461, 85501, 86525, 87605, 88633, 89673, 90785, 91829, 92909, 93981, 95093, 96209, 97273, 98385, 99477, 100621, 101765, 102873, 104017, 105185, 106353, 107501, 108637, 109845, 111009, 112193, 113369, 114553, 115781, 116965, 118213, 119433, 120649, 121905, 123121, 124381, 125629, 126909, 128153, 129393, 130721, 132013, 133301, 134565, 135877, 137193, 138505, 139809, 141165, 142493, 143837, 145189, 146505, 147889, 149273, 150629, 152013, 153421, 154793, 156209, 157585, 159033, 160421, 161837, 163253, 164713, 166209, 167601, 169049, 170501, 171973, 173485, 174921, 176401, 177929, 179373, 180917, 182381, 183941, 185489, 187009, 188561, 190053, 191669, 193205, 194733, 196321, 197849, 199449, 201029, 202621, 204269, 205861, 207465, 209049, 210713, 212357, 213973, 215605, 217249, 218905, 220577, 222249, 223925, 225581, 227301, 228977, 230657, 232393, 234121, 235829, 237525, 239277, 241009, 242761, 244497, 246253, 248037, 249773, 251549, 253321, 255145, 256945, 258709, 260517, 262341, 264189, 266025, 267777, 269681, 271509, 273365, 275205, 277085, 278985, 280817, 282697, 284565, 286453, 288413, 290273, 292201, 294137, 296025, 297965, 299861, 301893, 303809, 305777, 307713, 309681, 311709, 313677, 315653, 317649, 319665, 321657, 323637, 325653, 327717, 329749, 331801, 333809, 335881, 337965, 340037, 342077, 344157, 346209, 348281, 350433, 352517, 354629, 356725, 358805, 361001, 363145, 365289, 367413, 369525, 371749, 373865, 376081, 378225, 380425, 382605, 384765, 386981, 389201, 391433, 393657, 395849, 398125, 400325, 402613, 404841, 407073, 409377, 411613, 413909, 416157, 418517, 420801, 423097, 425385, 427709, 430085, 432381, 434685, 437025, 439369, 441785, 444093, 446469, 448837, 451193, 453601, 455929, 458369, 460789, 463189, 465613, 468025, 470481, 472889, 475337, 477821, 480229, 482709, 485129, 487625, 490153, 492585, 495101, 497533, 500109, 502625, 505113, 507665, 510165, 512733, 515245, 517773, 520377, 522897, 525497, 528045, 530605, 533213, 535797, 538385, 540977, 543657, 546237, 548837, 551429, 554113, 556769, 559409, 562081, 564733, 567453, 570085, 572745, 575449, 578153, 580833, 583485, 586165, 588973, 591665, 594457, 597129, 599857, 602645, 605381, 608189, 610937, 613737, 616473, 619205, 622093, 624845, 627677, 630473, 633209, 636121, 638965, 641813, 644629, 647461, 650369, 653153, 656073, 658965, 661837, 664725, 667561, 670489, 673369, 676321, 679237, 682157, 685117, 688009, 690953, 693913, 696897, 699861, 702789, 705749, 708785, 711793, 714745, 717685, 720749, 723749, 726813, 729801, 732849, 735905, 738917, 741981, 744965, 748141, 751225, 754241, 757305, 760381, 763517, 766613, 769677, 772857, 775913, 779081, 782197, 785349, 788509, 791601, 794761, 797889, 801129, 804301, 807477, 810693, 813873, 817089, 820249, 823473, 826733, 829949, 833189, 836385, 839649, 842913, 846149, 849453, 852677, 856005, 859241, 862545, 865841, 869157, 872453, 875733, 879069, 882425, 885737, 889113, 892421, 895805, 899133, 902477, 905905, 909209, 912681, 916021, 919421, 922765, 926201, 929657, 933057, 936497, 939957, 943349, 946845, 950257, 953753, 957209, 960633, 964165, 967597, 971149, 974625, 978121, 981609, 985093, 988693, 992173, 995701, 999289, 1002833, 1006369, 1009901, 1013461, 1017077, 1020677, 1024217, 1027817, 1031393, 1035005, 1038597, 1042173, 1045837, 1049489, 1053113, 1056801, 1060445, 1064117, 1067757, 1071369, 1075105, 1078745, 1082465, 1086109, 1089805, 1093557, 1097193, 1100929, 1104641, 1108425, 1112181, 1115837, 1119589, 1123417, 1127153, 1130913, 1134597, 1138501, 1142245, 1146013, 1149841, 1153601, 1157489, 1161285, 1165077, 1168869, 1172797, 1176633, 1180441, 1184265, 1188165, 1192013, 1195885, 1199769, 1203705, 1207569, 1211473, 1215325, 1219277, 1223205, 1227105, 1231057, 1234993, 1238945, 1242901, 1246837, 1250805, 1254753, 1258745, 1262697, 1266665, 1270725, 1274717, 1278717, 1282673, 1286729, 1290761, 1294725, 1298821, 1302837, 1306933, 1310969, 1314937, 1319073, 1323157, 1327309, 1331357, 1335405, 1339593, 1343617, 1347809, 1351861, 1355973, 1360141, 1364209, 1368401, 1372577, 1376737, 1380909, 1385005, 1389181, 1393401, 1397609, 1401825, 1405977, 1410213, 1414389, 1418589, 1422817, 1427057, 1431329, 1435545, 1439789, 1444093, 1448373, 1452649, 1456889, 1461073, 1465437, 1469741, 1474053, 1478349, 1482673, 1486945, 1491321, 1495597, 1500005, 1504349, 1508685, 1513089, 1517377, 1521769, 1526141, 1530517, 1534933, 1539297, 1543713, 1548089, 1552497, 1556973, 1561357, 1565805, 1570193, 1574721, 1579201, 1583617, 1588061, 1592541, 1597029, 1601489, 1605977, 1610497, 1614949, 1619517, 1623973, 1628493, 1633041, 1637577, 1642113, 1646621, 1651309, 1655789, 1660349, 1664913, 1669489, 1674161, 1678685, 1683253, 1687853, 1692493, 1697137, 1701689, 1706297, 1710973, 1715605, 1720317, 1724881, 1729617, 1734233, 1738921, 1743573, 1748205, 1752957, 1757641, 1762345, 1767121, 1771801, 1776517, 1781189, 1785949, 1790713, 1795441, 1800185, 1804877, 1809773, 1814517, 1819301, 1824097, 1828865, 1833665, 1838493, 1843293, 1848133, 1852925, 1857729, 1862505, 1867353, 1872293, 1877157, 1881981, 1886821, 1891705, 1896633, 1901513, 1906341, 1911333, 1916157, 1921057, 1925993, 1930921, 1935889, 1940757, 1945661, 1950629, 1955625, 1960665, 1965553, 1970505, 1975565, 1980453, 1985517, 1990409, 1995521, 2000529, 2005461, 2010573, 2015549, 2020637, 2025681, 2030665, 2035785, 2040813, 2045877, 2050957, 2056013, 2061161, 2066169, 2071321, 2076365, 2081549, 2086685, 2091737, 2096873, 2101993, 2107217, 2112333, 2117469, 2122677, 2127833, 2133001, 2138161, 2143353, 2148573, 2153669, 2158917, 2164121, 2169417, 2174625, 2179825, 2185061, 2190309, 2195557, 2200793, 2206017, 2211361, 2216621, 2221933, 2227173, 2232477, 2237817, 2243137, 2248425, 2253677, 2259101, 2264421, 2269749, 2275049, 2280377, 2285801, 2291165, 2296501, 2301869, 2307217, 2312665, 2318017, 2323433, 2328869, 2334253, 2339685, 2345025, 2350569, 2355985, 2361409, 2366813, 2372285, 2377845, 2383281, 2388793, 2394273, 2399721, 2405197, 2410661, 2416221, 2421721, 2427281, 2432745, 2438181, 2443837, 2449365, 2454981, 2460441, 2466001, 2471665, 2477165, 2482805, 2488445, 2494029, 2499609, 2505057, 2510841, 2516421, 2522045, 2527685, 2533201, 2539001, 2544569, 2550297, 2555941, 2561597, 2567333, 2572953, 2578601, 2584401, 2590065, 2595789, 2601445, 2607149, 2612913, 2618649, 2624393, 2630089, 2635941, 2641597, 2647365, 2653145, 2659025, 2664769, 2670525, 2676309, 2682093, 2687997, 2693745, 2699577, 2705385, 2711213, 2717109, 2722901, 2728789, 2734657, 2740489, 2746417, 2752205, 2758165, 2764029, 2769881, 2775841, 2781713, 2787657, 2793549, 2799509, 2805493, 2811393, 2817337, 2823209, 2829217, 2835253, 2841189, 2847181, 2853081, 2859145, 2865137, 2871061, 2877125, 2883125, 2889197, 2895185, 2901145, 2907353, 2913333, 2919405, 2925421, 2931493, 2937601, 2943649, 2949793, 2955813, 2961949, 2968077, 2974149, 2980225, 2986457, 2992569, 2998669, 3004765, 3010917, 3017113, 3023281, 3029385, 3035641, 3041797, 3047989, 3054165, 3060265, 3066617, 3072745, 3079001, 3085149, 3091405, 3097701, 3103921, 3110209, 3116433, 3122629, 3128941, 3135157, 3141549]

integers = []

mod8 = [[], [], [], [], [], [], [], []]

for el in radius:
    n = numbRadius[el]
    integers.append(n)
    mod8[n % 8].append(n)

for i in range(1, 8):
    mod8[i].sort()

toomuch = sum(integers) % 8

if toomuch == 0:
    print(0)
    exit()

waysToWalk = [[[1]], [[2], [1, 1]], [[3], [1, 2], [1, 1, 1], [2, 1]],
              [[4], [1, 3], [1, 1, 2], [1, 1, 1, 1], [1, 2, 1], [2, 2], [2, 1, 1], [3, 1]],
              [[5], [1, 4], [1, 1, 3], [1, 1, 1, 2], [1, 1, 1, 1, 1], [1, 1, 2, 1], [1, 2, 2], [1, 2, 1, 1], [1, 3, 1],
               [2, 3], [2, 1, 2], [2, 1, 1, 1], [2, 2, 1], [3, 2], [3, 1, 1], [4, 1]],
              [[6], [1, 5], [1, 1, 4], [1, 1, 1, 3], [1, 1, 1, 1, 2], [1, 1, 1, 1, 1, 1], [1, 1, 1, 2, 1], [1, 1, 2, 2],
               [1, 1, 2, 1, 1], [1, 1, 3, 1], [1, 2, 3], [1, 2, 1, 2], [1, 2, 1, 1, 1], [1, 2, 2, 1], [1, 3, 2],
               [1, 3, 1, 1], [1, 4, 1], [2, 4], [2, 1, 3], [2, 1, 1, 2], [2, 1, 1, 1, 1], [2, 1, 2, 1], [2, 2, 2],
               [2, 2, 1, 1], [2, 3, 1], [3, 3], [3, 1, 2], [3, 1, 1, 1], [3, 2, 1], [4, 2], [4, 1, 1], [5, 1]],
              [[7], [1, 6], [1, 1, 5], [1, 1, 1, 4], [1, 1, 1, 1, 3], [1, 1, 1, 1, 1, 2], [1, 1, 1, 1, 1, 1, 1],
               [1, 1, 1, 1, 2, 1], [1, 1, 1, 2, 2], [1, 1, 1, 2, 1, 1], [1, 1, 1, 3, 1], [1, 1, 2, 3], [1, 1, 2, 1, 2],
               [1, 1, 2, 1, 1, 1], [1, 1, 2, 2, 1], [1, 1, 3, 2], [1, 1, 3, 1, 1], [1, 1, 4, 1], [1, 2, 4],
               [1, 2, 1, 3], [1, 2, 1, 1, 2], [1, 2, 1, 1, 1, 1], [1, 2, 1, 2, 1], [1, 2, 2, 2], [1, 2, 2, 1, 1],
               [1, 2, 3, 1], [1, 3, 3], [1, 3, 1, 2], [1, 3, 1, 1, 1], [1, 3, 2, 1], [1, 4, 2], [1, 4, 1, 1], [1, 5, 1],
               [2, 5], [2, 1, 4], [2, 1, 1, 3], [2, 1, 1, 1, 2], [2, 1, 1, 1, 1, 1], [2, 1, 1, 2, 1], [2, 1, 2, 2],
               [2, 1, 2, 1, 1], [2, 1, 3, 1], [2, 2, 3], [2, 2, 1, 2], [2, 2, 1, 1, 1], [2, 2, 2, 1], [2, 3, 2],
               [2, 3, 1, 1], [2, 4, 1], [3, 4], [3, 1, 3], [3, 1, 1, 2], [3, 1, 1, 1, 1], [3, 1, 2, 1], [3, 2, 2],
               [3, 2, 1, 1], [3, 3, 1], [4, 3], [4, 1, 2], [4, 1, 1, 1], [4, 2, 1], [5, 2], [5, 1, 1], [6, 1]]]
smallest = -1

for ways in waysToWalk[toomuch - 1]:
    localSum = 0
    occurances = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    try:
        for el in ways:
            localSum += mod8[el][occurances[el - 1]]
            occurances[el - 1] += 1

        if localSum <= smallest or smallest<0:
            smallest = localSum
    except:
        continue

if smallest == -1:
    print(sum(integers))
else:
    print(smallest)